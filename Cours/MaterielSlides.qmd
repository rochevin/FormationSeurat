---
title: "Materiel pour slides"
format:
  html:
    toc: true
    toc-depth: 2
    toc-location: left
    number-sections: true
date: 'Compiled: `r format(Sys.Date(), "%B %d, %Y")`'
execute:
  cache: true
---


# Introduction

### bulk RNA-seq vs single-cell RNAseq

![bulkRNAseq](images/BulkRNA.png)

![scRNAseq](images/singlecell.png)

![bulk vs scRNAseq](images/scRNAseq.png)

### scRNAseq data

- $C$ cells, $G$ genes:  $C\leq G$ or $C \approx G$ $\Longrightarrow$ high dimensionality
- Measures: $y_{cg}\in\mathbb{N}$  = count expression measure of gene $g$ in cell $c$
- Technical and biological noise
- High variability
- Zero-inflated data $\Longrightarrow$ "sparsity" 
($\geq 80\%$ of zeros per raw, dropouts). 

### Biological questions

:::: {.columns}
::: {.column width="50%"}
- Are there distinct subpopulations of cells? - For each cell type, what are the marker genes? 
- How visualize the cells? 
- Are there continuums of differentiation / activation cell states? 
- ...
:::
::: {.column width="50%"}
![](images/QBio.jpg)
(\tiny Rostom et al, FEBS 2017)
:::
:::


### Statistical analysis
:::: {.columns}
::: {.column width="50%"}
- Clustering of cells 
- Variable (gene) selection in learning or differential analysis (hypothesis testing) 
- Reduction dimension 
- Network inference
- Pseudo-time inference
- ...
:::
::: {.column width="50%"}
![](images/QBio.jpg)
(\tiny Rostom et al, FEBS 2017)
:::
:::

### Number of available tools for scRNAseq data
:::: {.columns}
::: {.column width="50%"}
![](images/Nbtools.png)
:::
::: {.column width="50%"}
![](images/LogoscRNAtools.png)
Many packages are released regularly for scRNAseq data analysis.
You can follow the news in the "Updates" section of scRNA-tools.
<!--
\underline{\url{https://www.scrna-tools.org/updates}}} 
-->
:::
:::
![](images/Nbtools2.png)


### Some bio-info-stat. pipelines/workflows

:::: {.columns}
::: {.column width="50%"}
- [Seurat](https://satijalab.org/seurat/) <!--\cite{Satija15}-->
![](images/Seurat.png)


- [SCANPY](https://github.com/theislab/Scanpy)<!--\cite{scanpy:wolf18}-->
![](images/Scanpy.png)

- [Sincell](https://bioconductor.org/packages/release/bioc/html/sincell.html) 
<!--\cite{Sincell15} -->	![](images/sincell.png)

- [simpleSingleCell](https://bioconductor.org/packages/release/workflows/html/simpleSingleCell.html)
<!--\cite{LunWorkflow16}-->
![](images/WorkflowLun.png)
![](images/simpleSingleCell.png)
:::
::: {.column width="50%"}
- [SINCERA](https://research.cchmc.org/pbge/sincera.html)    
<!--\cite{GuoSINCERA15}-->
![](images/SINCERAschema.png)

- [Scedar](https://github.com/logstar/scedar) <!--\cite{scedar}-->
![](images/Scedar.png)

- $\ldots$
:::
:::


# Preparation des données

## Alignement - filtrage CellRanger

### CellRanger

![](images/10XGenomics.png)
![](images/CellRanger-1.png)
![](images/CellRanger-Pos.png)

## Seurat / scanpy / ...

-   Expliquer que chaque pipeline a son type d'Objet
    -   Seurat en R $\longrightarrow$ Seurat Object
    -   Scanpy en python $\longrightarrow$ AnnData class
-   Dans la suite on va travailler avec Seurat
-   création de l'objet Seurat (SO) pour démarrer schéma évolutif de ce que l'on a rempli dans l'object




### Seurat object

### Example

```{r init}
#library(dplyr)
#library(Seurat)
#library(patchwork)

# Load the PBMC dataset
#pbmc.data <- Read10X(data.dir = "../data/pbmc3k_filtered_gene_bc_matrices/filtered_gene_bc_matrices/hg19/")
# Initialize the Seurat object with the raw (non-normalized data).
#pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc3k", min.cells = 3, min.features = 200)
#pbmc
```

On peut montrer le contenu stocké vis-à-vis d'un schéma sur la structure de SO

# Pipeline d'analyse d'une condition biologique

## Normalisation et contrôle qualité

### QC metrics

- A FAIRE


```{r}
#pbmc[["percent.mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
#head(pbmc@meta.data, 5)
#VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)

# FeatureScatter is typically used to visualize feature-feature relationships, but can be used
# for anything calculated by the object, i.e. columns in object metadata, PC scores etc.

#plot1 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "percent.mt")
#plot2 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
#plot1 + plot2


```

### Selecting cells

Filtrage préliminaire des cellules à l'aide de ces indicateurs

```{r}
#pbmc <- subset(pbmc, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
```



### Normalisation

- Bcp de stratégies possibles pour normaliser les données
- Dans Seurat, méthodes disponibles
  + "LogNormalize" : .....
  + "SCTransform" : .....
  
```{r}
# pbmc <- NormalizeData(pbmc, normalization.method = "LogNormalize", scale.factor = 10000)
# pbmc@assays$ .....
# pbmc[["RNA"]]$data
```
  

### HVG

## Réduction de dimension

### Objectifs de la réduction de dimension

### PCA

-   scale + runPCA
-   explication du principe de la PCA
-   explication des sorties de Seurat
-   expliquer où c'est stocké dans l'objet

### UMAP

-   utilise au démarrage les coordonnées de PCA
-   explication du principe de l'UMAP
-   illustration

## Clustering

### Principe / objectif du clustering

### Some methods

### Dans Seurat

-   explication du principe de Louvain
-   nécessite un parametre de résolution (pas nb de clusters K)
-   exemple pour une valeur de résolution (FindNeighbour + FindCluster)
-   exemple de plot sur UMAP, effectifs par classe, ....

### Choix de la resolution ?

- faire tourner pour plusieurs résolution
- visualisation par ARI, clustree des différents clusterings obtenus
- En afficher deux sur UMAP figue dissociée
- on peut tous les stocker dans objet SO mais attention à bien positionner celui étudié pour la suite

## Marker gene

### Question / objectif

- formalisation du problème
- naturellement on est sur une question de test

### Wilcoxon

- explication du test de Wilcoxon
- correction de test multiple
- sur l'exemple, montrer le grand nombre de gènes sélectionnés

### Problème de double-dipping

- mettre l'exemple classique sur une classe gaussienne
image de article avec Nicolas
- reste un probleme ouvert en statistique, loin d'une solution pour le scRNAseq

### AUC

- explication de l'AUC
- attention ce n'est pas un test
- choix du seuil ?
- application sur l'exemple avec FindAllMarkers

### Autres indicateurs dispo

- pct.1 / pct.2
- log2FC

### Exemple

- on fusionne les deux tableaux obtenus par AUC et wilcox
- on applique des filtres pour retenir un groupe de genes marqueurs pour chaque cluster
- visualisation par DoHeatmap
- dotPlot
- ridgePlot

### 1 groupe contre un autre

- expliquer que l'o peut faire la même chose mais en précisant une classe contre une autre, un groupe de classes contre un autre groupe de classes
- fonction FindMarkers
- le faire sur l'exemple



